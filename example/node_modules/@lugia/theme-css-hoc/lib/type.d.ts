import { CSSThemeProps, DynamicThemeMega, ThemeMeta } from '@lugia/theme-core/lib/type';
import { ComponentType, ElementType, MutableRefObject } from 'react';
import { AnyStyledComponent } from 'styled-components';
export declare type StateType = 'normal' | 'active' | 'hover' | 'disabled' | 'focus';
export declare type TranslateFunction = (themeMeta: ThemeMeta, themeProps: CSSThemeProps) => object;
export declare type TranslateCSSFunction = (themeMeta: ThemeMeta, themeProps: CSSThemeProps) => string;
export declare type StyleType = {
    [style: string]: any;
};
export declare type ThemeStyle = {
    normal?: StyleType;
    hover?: StyleType;
    focus?: StyleType;
    active?: StyleType;
    disabled?: StyleType;
    styleInCSSConfig?: StyleType;
    themeMeta?: State2ThemeMeta;
};
export declare type CSSProps = {
    disabled?: boolean;
    themeProps: CSSThemeProps;
    innerRef?: MutableRefObject<any>;
};
declare type Names = string[];
export declare type CSSMeta = {
    selectNames?: Names[];
    getStyle?: (theme: ThemeMeta, themeProps: CSSThemeProps) => object;
    getCSS?: (theme: ThemeMeta, themeProps: CSSThemeProps) => string;
    defaultTheme?: ThemeMeta;
} & DynamicThemeMega;
export declare type CSSHocOption = {
    hover?: boolean;
    active?: boolean;
    focus?: boolean;
};
declare type CSSExtend = (ComponentType<any> | ElementType<any> | AnyStyledComponent) & {
    __OrginalWidget__: any;
};
export declare type CSSConfig = {
    tag?: keyof JSX.IntrinsicElements;
    className: string;
    extend?: CSSExtend;
    css?: any;
    normal?: CSSMeta;
    active?: CSSMeta;
    hover?: CSSMeta;
    focus?: CSSMeta;
    disabled?: CSSMeta;
    option?: CSSHocOption;
};
export declare type ThemeMetaGetter = (themeMeta: ThemeMeta) => ThemeMeta;
export declare type StateType2Getter = {
    normal: ThemeMetaGetter;
    active: ThemeMetaGetter;
    hover: ThemeMetaGetter;
    disabled: ThemeMetaGetter;
    focus: ThemeMetaGetter;
};
export declare type ThemeObjectItem = ThemeMeta & CSSMeta;
export declare type State2ThemeMeta = {
    normal?: ThemeObjectItem;
    active?: ThemeObjectItem;
    hover?: ThemeObjectItem;
    disabled?: ThemeObjectItem;
    focus?: ThemeObjectItem;
    current?: ThemeObjectItem;
};
export declare type ThemeObject = {
    themeMeta?: State2ThemeMeta;
} & State2ThemeMeta;
export {};
